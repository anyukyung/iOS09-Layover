////
////  SettingViewControllerTests.swift
////  Layover
////
////  Created by 김인환 on 12/13/23.
////  Copyright (c) 2023 CodeBomber. All rights reserved.
////
////  This file was generated by the Clean Swift Xcode Templates so
////  you can apply clean architecture to your iOS and Mac projects,
////  see http://clean-swift.com
////
//
//@testable import Layover
//import XCTest
//
//class SettingViewControllerTests: XCTestCase {
//    // MARK: Subject under test
//
//    var sut: SettingViewController!
//    var window: UIWindow!
//
//    // MARK: - Test lifecycle
//
//    override func setUp() {
//        super.setUp()
//        window = UIWindow()
//        setupSettingViewController()
//    }
//
//    override func tearDown() {
//        window = nil
//        super.tearDown()
//    }
//
//    // MARK: - Test setup
//
//    func setupSettingViewController() {
//        let bundle = Bundle.main
//        let storyboard = UIStoryboard(name: "Main", bundle: bundle)
//        sut = storyboard.instantiateViewController(withIdentifier: "SettingViewController") as! SettingViewController
//    }
//
//    func loadView() {
//        window.addSubview(sut.view)
//        RunLoop.current.run(until: Date())
//    }
//
//    // MARK: - Test doubles
//
//    class SettingBusinessLogicSpy: SettingBusinessLogic {
//        var doSomethingCalled = false
//
//        func doSomething(request: Setting.Something.Request)
//        {
//          doSomethingCalled = true
//        }
//    }
//
//    // MARK: - Tests
//
//    func testShouldDoSomethingWhenViewIsLoaded() {
//        // Given
//        let spy = SettingBusinessLogicSpy()
//        sut.interactor = spy
//
//        // When
//        loadView()
//
//        // Then
//        XCTAssertTrue(spy.doSomethingCalled, "viewDidLoad() should ask the interactor to do something")
//    }
//
//    func testDisplaySomething() {
//        // Given
//        let viewModel = Setting.Something.ViewModel()
//
//        // When
//        loadView()
//        sut.displaySomething(viewModel: viewModel)
//
//        // Then
//        //XCTAssertEqual(sut.nameTextField.text, "", "displaySomething(viewModel:) should update the name text field")
//    }
//}
